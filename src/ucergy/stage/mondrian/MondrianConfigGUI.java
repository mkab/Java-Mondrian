package ucergy.stage.mondrian;

import javax.swing.*;


/**
 *
 * @author mkab
 */
public class MondrianConfigGUI extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	// Variables declaration  
	private JPanel panel;
	private JTextField jtfDbName;
	private JTextField jtfHost;
	private JPasswordField jpfPasswd;
	private JTextField jtfPort;
	private JTextField jtfTomcat;
	private JTextField jtfUser;
	private JTextField jtfXml;
	private JLabel labelDbName;
	private JLabel labelConType;
	private JLabel labelHost;
	private JLabel labelLog;
	private JLabel labelMdxQuery;
	private JLabel labelPasswd;
	private JLabel labelPort;
	private JLabel labelTomcat;
	private JLabel labelUser;
	private JLabel labelXml;
	private JTextArea mdxTextArea;
	private JTextArea jtfInfo;
	private JComboBox combo;
	private JMenuBar menubar;
	private JMenu filemenu;
	private JMenu helpmenu;
	private JScrollPane jScrollPane1;
	private JScrollPane jScrollPane2;
	private JButton okbutton;
	private JButton resetbutton;
	private JButton browsebutton;
	private JButton detect;
	private JButton testconButton;
	private JSeparator separator;
	// End of variables declaration 

	/**
	 * Creates new form gui
	 */
	public MondrianConfigGUI() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {

		panel 		  = new JPanel();

		labelTomcat   = new JLabel();
		labelHost	  = new JLabel();
		labelDbName   = new JLabel();
		labelPort 	  = new JLabel();
		labelUser 	  = new JLabel();
		labelPasswd   = new JLabel();
		labelConType  = new JLabel();
		labelXml 	  = new JLabel();
		labelMdxQuery = new JLabel();
		labelLog 	  = new JLabel();

		jtfTomcat 	  = new JTextField();
		jtfHost 	  = new JTextField();
		jtfDbName 	  = new JTextField();
		jtfPort 	  = new JTextField();
		jtfUser 	  = new JTextField();
		jpfPasswd	  = new JPasswordField();
		jtfXml 		  = new JTextField();

		browsebutton  = new JButton();
		detect 		  = new JButton();
		okbutton 	  = new JButton();
		resetbutton   = new JButton();
		testconButton = new JButton();

		jtfInfo 	  = new JTextArea();
		mdxTextArea   = new JTextArea();
		jScrollPane1  = new JScrollPane();
		jScrollPane2  = new JScrollPane();

		separator 	  = new JSeparator();
		combo 		  = new JComboBox();

		menubar 	  = new JMenuBar();
		filemenu 	  = new JMenu();
		helpmenu 	  = new JMenu();

		labelTomcat.setText("Tomcat Directory :");
		labelTomcat.setToolTipText("Tapez votre dossier d'installation de Tomcat ou appuyez sur le  button Detect pour que MondrianConfigGUI puisse le detecter.");

		labelHost.setText("Hostname : ");
		labelHost.setToolTipText("Le nom de l'hote");

		labelDbName.setText("Database Name : ");
		labelDbName.setToolTipText("Le nom de la base de donnees");

		labelPort.setText("Port Number : ");
		labelPort.setToolTipText("Le numero du port");

		labelUser.setText("Username : ");
		labelUser.setToolTipText("Le nom d'utilisateur");

		labelPasswd.setText("Password : ");
		labelPasswd.setToolTipText("Le mot de passe");

		labelConType.setText("Connection Type : ");
		labelConType.setToolTipText("Le type de la base de donnees (MySQL, Oracle, ...)");

		labelXml.setText("Choose your XML file : ");
		labelXml.setToolTipText("Choisir votre fichier XML a importer");

		labelMdxQuery.setText("MDX Query : ");
		labelMdxQuery.setToolTipText("Tapez la requete MDX a execute par Mondrian");

		labelLog.setText("Log information");

		separator.setOrientation(SwingConstants.VERTICAL);

		combo.addItem("");
		combo.addItem("MySQL");
		combo.addItem("Oracle");

		browsebutton.setText("Browse...");
		browsebutton.addActionListener(new BrowseButton(this));

		detect.setText("Detect");
		detect.addActionListener(new ButtonsAction(this));

		okbutton.setText("OK");
		okbutton.addActionListener(new ButtonsAction(this));

		resetbutton.setText("Reset");
		resetbutton.addActionListener(new ButtonsAction(this));

		testconButton.setText("Test Connection");
		testconButton.addActionListener(new ConnectionAction(this));

		mdxTextArea.setColumns(20);
		mdxTextArea.setRows(5);
		jScrollPane1.setViewportView(mdxTextArea);

		jtfInfo.setColumns(20);
		jtfInfo.setRows(5);
		jScrollPane2.setViewportView(jtfInfo);

		javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
		panel.setLayout(panelLayout);
		panelLayout.setHorizontalGroup(
				panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(panelLayout.createSequentialGroup()
						.addContainerGap()
						.addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(labelHost)
								.addComponent(labelPasswd)
								.addComponent(labelUser)
								.addComponent(labelPort)
								.addComponent(labelDbName)
								.addGroup(panelLayout.createSequentialGroup()
										.addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
												.addComponent(jtfUser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
												.addComponent(jtfPort, javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jtfDbName, javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jpfPasswd, javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(labelTomcat, javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jtfTomcat, javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jtfHost, javax.swing.GroupLayout.Alignment.LEADING))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(detect))
												.addComponent(testconButton))
												.addGap(41, 41, 41)
												.addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(panelLayout.createSequentialGroup()
																.addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																		.addGroup(panelLayout.createSequentialGroup()
																				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																				.addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(labelConType)
																						.addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addComponent(labelXml)
																						.addGroup(panelLayout.createSequentialGroup()
																								.addComponent(jtfXml, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addGap(18, 18, 18)
																								.addComponent(browsebutton))))
																								.addGroup(panelLayout.createSequentialGroup()
																										.addGap(46, 46, 46)
																										.addComponent(okbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addGap(62, 62, 62)
																										.addComponent(resetbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
																										.addGap(0, 0, Short.MAX_VALUE))
																										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
																												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																												.addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																														.addComponent(labelMdxQuery)
																														.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))))
																														.addContainerGap())
				);
		panelLayout.setVerticalGroup(
				panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(panelLayout.createSequentialGroup()
						.addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(panelLayout.createSequentialGroup()
										.addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(panelLayout.createSequentialGroup()
														.addGap(40, 40, 40)
														.addComponent(labelTomcat)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																.addComponent(jtfTomcat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																.addComponent(detect))
																.addGap(12, 12, 12)
																.addComponent(labelHost)
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(jtfHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(18, 18, 18)
																.addComponent(labelDbName)
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(jtfDbName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(24, 24, 24)
																.addComponent(labelPort)
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(jtfPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(labelUser)
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(jtfUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(12, 12, 12)
																.addComponent(labelPasswd)
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(jpfPasswd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
																		.addGap(39, 39, 39)
																		.addComponent(labelConType)
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addGap(12, 12, 12)
																		.addComponent(labelXml)
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(jtfXml, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(browsebutton))
																				.addGap(35, 35, 35)
																				.addComponent(labelMdxQuery)
																				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																				.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
																				.addGap(18, 18, 18)
																				.addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																						.addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																								.addComponent(okbutton)
																								.addComponent(resetbutton))
																								.addComponent(testconButton)))
																								.addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
																								.addContainerGap(29, Short.MAX_VALUE))
				);

		filemenu.setText("File");
		menubar.add(filemenu);

		helpmenu.setText("?");
		menubar.add(helpmenu);

		setJMenuBar(menubar);

		GroupLayout layout = new GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addComponent(panel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addGap(0, 12, Short.MAX_VALUE))
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(panel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				);

		pack();
		setLocation(150, 100);
		setResizable(false);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setVisible(true);
	}



	/**
	 * @param args the command line arguments
	 */
	public static void main(String[] args) {

		/*
		 * Create and display the form
		 */
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				new MondrianConfigGUI();
			}
		});
	}

	/**
	 * @return the panel
	 */
	public JPanel getPanel() {
		return panel;
	}

	/**
	 * @return the jtfDbName
	 */
	public JTextField getJtfDbName() {
		return jtfDbName;
	}

	/**
	 * @return the jtfHost
	 */
	public JTextField getJtfHost() {
		return jtfHost;
	}

	/**
	 * @return the jpfPasswd
	 */
	public JPasswordField getJpfPasswd() {
		return jpfPasswd;
	}

	/**
	 * @return the jtfPort
	 */
	public JTextField getJtfPort() {
		return jtfPort;
	}

	/**
	 * @return the jtfTomcat
	 */
	public JTextField getJtfTomcat() {
		return jtfTomcat;
	}

	/**
	 * @return the jtfUser
	 */
	public JTextField getJtfUser() {
		return jtfUser;
	}

	/**
	 * @return the jtfXml
	 */
	public JTextField getJtfXml() {
		return jtfXml;
	}

	/**
	 * @return the labelXml
	 */
	public JLabel getLabelXml() {
		return labelXml;
	}

	/**
	 * @return the mdxTextArea
	 */
	public JTextArea getMdxTextArea() {
		return mdxTextArea;
	}

	/**
	 * @return the jtfInfo
	 */
	public JTextArea getJtfInfo() {
		return jtfInfo;
	}

	/**
	 * @return the combo
	 */
	public JComboBox getComboConType() {
		return combo;
	}

	/**
	 * @return the menubar
	 */
	public JMenuBar getMenubar() {
		return menubar;
	}

	/**
	 * @return the filemenu
	 */
	public JMenu getFilemenu() {
		return filemenu;
	}

	/**
	 * @return the helpmenu
	 */
	public JMenu getHelpmenu() {
		return helpmenu;
	}

	/**
	 * @return the okbutton
	 */
	public JButton getOkbutton() {
		return okbutton;
	}

	/**
	 * @return the resetbutton
	 */
	public JButton getResetbutton() {
		return resetbutton;
	}

	/**
	 * @return the browsebutton
	 */
	public JButton getBrowsebutton() {
		return browsebutton;
	}

	/**
	 * @return the detect
	 */
	public JButton getDetect() {
		return detect;
	}

}